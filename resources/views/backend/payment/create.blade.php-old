@extends('backend.layouts.app')
@section('content')
    @php
        $helper = new \App\Helpers\Helper();
    @endphp
    <section class="section">
        <div class="row">
            <div class="col-lg-12">

                <!--</div>-->
                <div class="card">
                    <div class="card-header">
                        New Payment Request
                    </div>
                    <div class="card-body">
                        <div class="tablecontainer">
                            <p style="color:red;">(*) All fields mandatory</p>
                            <table id="requestFormtable" class="table-responsive-full sort-table">
                                <thead>
                                    <tr>
                                        {{--<th>Internal/External</th>--}}
                                        <th>Template Type</th>
                                        <th>Project <i class="fas fa-sort"></i></th>
                                        <th>Payment From<i class="fas fa-sort"></i></th>
                                        <th>From Account (A/C)<i class="fas fa-sort"></i></th>
                                        <th>Payment To <i class="fas fa-sort"></i></th>
                                        <th>A/C No.<i class="fas fa-sort"></i></th>
                                        <th>Benificiary Name <i class="fas fa-sort"></i></th>
                                        {{-- <th>To Account Type <i class="fas fa-sort"></i></th> --}}
                                        <th>Name Of Bank <i class="fas fa-sort"></i></th>
                                        <th>IFSC Code <i class="fas fa-sort"></i></th>
                                        <th>Amount <i class="fas fa-sort"></i></th>
                                        <th>Purpose <i class="fas fa-sort"></i></th>
                                    </tr>
                                </thead>
                                <tbody id="table-body-request">
                                    <tr>
                                        <form name="requestFormCreate" method="post" id="requestFormCreate">
                                            @csrf
                                            <input type="hidden"
                                                class="form-control @error('vendor_name') is-invalid @enderror"
                                                id="vendor_name" value="{{ old('vendor_name') ?? '' }}" name="vendor_name">
                                            <input type="hidden"
                                                class="form-control @error('account_full_name') is-invalid @enderror"
                                                id="account_full_name" value="{{ old('account_full_name') ?? '' }}"
                                                name="account_full_name" readonly>
                                            <input type="hidden"
                                                class="form-control @error('from_account_type') is-invalid @enderror"
                                                id="from_account_type" value="{{ old('from_account_type') ?? 'Internal' }}"
                                                name="from_account_type" readonly>
                                            <input type="hidden"
                                                class="form-control @error('template_type_hidden') is-invalid @enderror"
                                                id="template_type_hidden" value="{{ old('template_type_hidden') ?? '' }}"
                                                name="template_type" readonly>
                                            <input type="hidden"
                                                class="form-control @error('template_type_hidden') is-invalid @enderror"
                                                id="template_type_hidden" value="Internal"
                                                name="internal_external" readonly>
                                            {{--<td>
                                                <div class="col-md-12 p-2 p-10 left-align">
                                                    <label for="internal_external" class="form-label">Internal/External
                                                        <span style="color: red;">*</span></label>
                                                    <div class="col-md-12">
                                                        <select name="internal_external" id="internal_external"
                                                            class="form-control internal_external @error('internal_external') is-invalid @enderror"
                                                            required>
                                                            <option value="">Select options</option>
                                                            <option
                                                                value="Internal"{{ old('internal_external') == 'Internal' ? 'selected' : '' }}>
                                                                Internal</option>
                                                            <option
                                                                value="External"{{ old('internal_external') == 'External' ? 'selected' : '' }}>
                                                                External</option>
                                                        </select>
                                                        @error('internal_external')
                                                            <span class="text-danger">{{ $message }}</span>
                                                        @enderror
                                                    </div>
                                                </div>
                                            </td>--}}
                                            <td>
                                                <div class="col-md-12 p-2 p-10 left-align">
                                                    <label for="template_type" class="form-label">Template Type <span
                                                            style="color: red;">*</span></label>
                                                    <div class="col-md-12">
                                                        <select id="template_type"
                                                            class="form-control template_type fSelect @error('template_type') is-invalid @enderror"
                                                            require>
                                                            <option value="">--Select Options---</option>
                                                            {{-- <option value="bulk-rtgs"
                                                                {{ old('template_type') == 'mf-rtgs' ? 'selected' : '' }}>
                                                                Bulk RTGS</option>
                                                            <option value="sbi"
                                                                {{ old('template_type') == 'sbi' ? 'selected' : '' }}>SBI
                                                            </option> --}}
                                                            <option value="any-bank-internal-external-bulk"
                                                                {{ old('template_type') == 'any-bank-internal-external-bulk' ? 'selected' : '' }}>
                                                                Any Bulk</option>
                                                            <option value="sbi-sbi-internal-external-bulk"
                                                                {{ old('template_type') == 'sbi-sbi-internal-external-bulk' ? 'selected' : '' }}>
                                                                SBI Bulk</option>
                                                            <option value="anybank-onetomany-external-bulk"
                                                                {{ old('template_type') == 'anybank-onetomany-external-bulk' ? 'selected' : '' }}>
                                                                One To Many Bulk
                                                            </option>
                                                            <option value="anybank-internalexternal-single"
                                                                {{ old('template_type') == 'anybank-internalexternal-single' ? 'selected' : '' }}>
                                                                Any Single
                                                            </option>
                                                        </select>
                                                        @error('template_type')
                                                            <span class="text-danger">{{ $message }}</span>
                                                        @enderror
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="col-md-12 p-2 p-10 left-align">
                                                    <label for="project" class="form-label">Project <span
                                                            style="color: red;">*</span></label>
                                                    <div class="col-md-12">
                                                        <select name="project" id="project"
                                                            class="form-control project @error('project') is-invalid @enderror"
                                                            required>
                                                            <option value="">--Select Options---</option>
                                                        </select>
                                                        @error('project')
                                                            <span class="text-danger">{{ $message }}</span>
                                                        @enderror
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="col-md-12 p-2 p-10 left-align">
                                                    <label for="from_account" class="form-label"
                                                        data-pattern-text="">Payment
                                                        From <span style="color: red;">*</span></label>
                                                    <div class="col-md-12 from_account_dropdown">
                                                        <select id="from_account"
                                                            class="form-control from_account @error('from_account') is-invalid @enderror"
                                                            name="from_account" data-index="0">
                                                        </select>
                                                        @error('from_account')
                                                            <span class="text-danger">{{ $message }}</span>
                                                        @enderror
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="col-md-12 p-2 p-10 left-align">
                                                    <label for="from_account_no" class="form-label">From Account A/C</label>
                                                    <div class="col-md-12">
                                                        <input type="text"
                                                            class="form-control @error('from_account_no') is-invalid @enderror"
                                                            id="from_account_no" value="{{ old('from_account_no') ?? '' }}"
                                                            name="from_account_no" data-index="0" readonly>
                                                        @error('from_account_no')
                                                            <span class="text-danger">{{ $message }}</span>
                                                        @enderror
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="col-md-12 p-2 p-10 left-align">
                                                    <label for="vendor_code" class="form-label">Payment To <span
                                                            style="color: red;">*</span></label>
                                                    <div class="col-md-12 vendor_code_dropdown">
                                                        <select id="vendor_code"
                                                            class="form-control vendor_code @error('vendor_code') is-invalid @enderror"
                                                            name="vendor_code" data-index="0">
                                                        </select>
                                                        @error('vendor_code')
                                                            <span class="text-danger">{{ $message }}</span>
                                                        @enderror
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="col-md-12 p-2 p-10 left-align">
                                                    <label for="vendor_account" class="form-label">A/C No.</label>
                                                    <div class="col-md-12">
                                                        <input type="text"
                                                            class="form-control @error('vendor_account') is-invalid @enderror"
                                                            id="vendor_account" value="{{ old('vendor_account') ?? '' }}"
                                                            name="vendor_account" readonly>
                                                        @error('vendor_account')
                                                            <span class="text-danger">{{ $message }}</span>
                                                        @enderror
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="col-md-12 p-2 p-10 left-align">
                                                    <label for="benificiary_name" class="form-label">Benificiary
                                                        Name</label>
                                                    <div class="col-md-12">
                                                        <input type="text"
                                                            class="form-control @error('benificiary_name') is-invalid @enderror"
                                                            id="benificiary_name"
                                                            value="{{ old('benificiary_name') ?? '' }}"
                                                            name="benificiary_name" readonly>
                                                        @error('benificiary_name')
                                                            <span class="text-danger">{{ $message }}</span>
                                                        @enderror
                                                    </div>
                                                </div>
                                            </td>
                                            {{-- <td>
                                                <div class="col-md-12 p-2 p-10 left-align">
                                                    <label for="to_account_type" class="form-label">To Account
                                                        Type</label>
                                                    <div class="col-md-12">
                                                        <input type="text"
                                                            class="form-control @error('to_account_type') is-invalid @enderror"
                                                            id="to_account_type"
                                                            value="{{ old('to_account_type') ?? '' }}"
                                                            name="to_account_type" readonly>
                                                        @error('to_account_type')
                                                            <span class="text-danger">{{ $message }}</span>
                                                        @enderror
                                                    </div>
                                                </div>
                                            </td> --}}
                                            <td>
                                                <div class="col-md-12 p-2 p-10 left-align">
                                                    <label for="name_of_bank" class="form-label">Name Of Bank</label>
                                                    <div class="col-md-12">
                                                        <input type="text"
                                                            class="form-control @error('name_of_bank') is-invalid @enderror"
                                                            id="name_of_bank" value="{{ old('name_of_bank') ?? '' }}"
                                                            name="name_of_bank" readonly>
                                                        @error('name_of_bank')
                                                            <span class="text-danger">{{ $message }}</span>
                                                        @enderror
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="col-md-12 p-2 p-10 left-align">
                                                    <label for="ifsc_code" class="form-label">IFSC Code</label>
                                                    <div class="col-md-12">
                                                        <input type="text"
                                                            class="form-control @error('ifsc_code') is-invalid @enderror"
                                                            id="ifsc_code" value="{{ old('ifsc_code') ?? '' }}"
                                                            name="ifsc_code" readonly>
                                                        @error('ifsc_code')
                                                            <span class="text-danger">{{ $message }}</span>
                                                        @enderror
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="col-md-12 p-2 p-10 left-align">
                                                    <label for="amount" class="form-label">Amount</label>
                                                    <div class="col-md-12">
                                                        <input type="number"
                                                            class="form-control @error('amount') is-invalid @enderror"
                                                            id="amount" value="{{ old('amount') ?? '' }}"
                                                            name="amount">
                                                        @error('amount')
                                                            <span class="text-danger">{{ $message }}</span>
                                                        @enderror
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="col-md-12 p-2 p-10 left-align">
                                                    <label for="vendor_0_purpose" class="form-label">Purpose</label>
                                                    <div class="col-md-12">
                                                        <textarea name="purpose" id="" class="form-control @error('purpose') is-invalid @enderror" id="purpose">{{ old('purpose') ?? '' }}</textarea>
                                                        @error('purpose')
                                                            <span class="text-danger">{{ $message }}</span>
                                                        @enderror
                                                    </div>
                                                </div>
                                            </td>
                                        </form>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="p-2">
                            <button class="btn btn-primary btn-sm float-right add-product">Add In Queue</button>
                            <button class="btn btn-primary btn-sm float-right request-queue-clear">Clear Request
                                Queue</button>
                        </div>
                    </div>
                </div>
                <form class="" action="{{ route('backend.payments.store') }}" method="post"
                    id="requestPaymentForm" name="requestForm">
                    @csrf
                    <div class="list-group mt-5 request-in-queue delete-item">
                        @if (!empty(\Cache::get('cart')))
                            @include('backend.payment.requestForm', ['cartItems' => \Cache::get('cart')])
                        @endif
                    </div>
                    <div class="col-md-12 mt-5 btnRequestForm {{ empty(\Cache::get('cart')) ? 'hide' : 'show' }}">
                        <input type="submit" class="col-md-2 offset-md-0 btn btn-primary btn-sm request-form-submit"
                            value="Save" style="background: #6c757d; color: #fff;">
                        <!-- Checkbox with Label -->
                        <div class="form-check mt-3">
                            <input type="checkbox" name="shortcut" id="shortcut" class="form-check-input">
                            <input type="text" name="shortcut_name" placeholder="Enter shortcut name"
                                id="shortcut_name" class="form-control" style="display:none;">
                            <label for="shortcut" class="form-check-label">
                                Do you want a shortcut?
                            </label>
                        </div>
                    </div>
                </form>
            </div>
    </section>
@endsection
@push('script')
    <style>
        form .error {
            color: #ff0000;
        }

        form#requestFormCreate {
            clear: both;
            overflow: hidden;
        }

        .badge {
            cursor: pointer;
        }

        span.badge.badge-primary.badge-pill {
            background: #6c757d;
        }

        .left-align {
            float: left;
            /* padding: 10px; */
            padding: 2px 10px 2px 10px !important;
        }

        fieldset.scheduler-border {
            border: 1px groove #ddd !important;
            padding: 0 1.4em 1.4em 1.4em !important;
            margin: 0 0 1.5em 0 !important;
            -webkit-box-shadow: 0px 0px 0px 0px #000;
            box-shadow: 0px 0px 0px 0px #000;
        }

        legend.scheduler-border {
            font-size: 1.2em !important;
            font-weight: bold !important;
            text-align: left !important;
            width: auto;
            padding: 0 10px;
            border-bottom: none;
        }

        input:read-only,
        textarea:read-only {
            background-color: #ccc;
            border: inherit;
        }

        #employee-table input:read-only,
        #employee-table textarea:read-only {
            background-color: transparent;
            border: inherit;
        }

        .btnRequestForm.show {
            display: block;
        }

        .btnRequestForm.hide {
            display: none;
        }

        #requestFormtable .select2-container .select2-results {
            max-height: 200px;
        }

        #requestFormtable .select2-results {
            max-height: 200px;
        }

        #requestFormtable .select2-choices {
            min-height: 150px;
            max-height: 150px;
            overflow-y: auto;
        }

        #requestFormtable .select2.select2-container,
        #requestFormtable input:read-only,
        #requestFormtable input[type=text],
        #requestFormtable input[type=number],
        #requestFormtable textarea,
        /* #requestFormtable select  */
            {
            position: relative;
            z-index: 2;
            float: left;
            width: 250px !important;
            margin-bottom: 0;
            display: table;
            table-layout: fixed;
            height: 50px;
            overflow: hidden;
        }
    </style>
    <script>
        $(document).ready(function() {
            /* $('#internal_external').on('change', function() {
                var selectedValue = $(this).val();
                var $templateType = $('#template_type');
                $templateType.val('').trigger('change'); // Reset
                if (selectedValue === 'External') {
                    $templateType.val('bulk-rtgs').trigger('change');
                } else if (selectedValue === 'Internal') {
                    $templateType.val('sbi').trigger('change');
                }
            }); */
            // Initialize Select2
            // $('#template_type').select2();
            /*  $('#internal_external').fSelect({
                 placeholder: 'Select options',
                 // numDisplayed: 0,
                 overflowText: '{n} selected',
                 searchText: 'Search options',
                 showSearch: true
             });
             $('#template_type').fSelect({
                 placeholder: 'Select options',
                 // numDisplayed: 0,
                 overflowText: '{n} selected',
                 searchText: 'Search options',
                 showSearch: true
             });
             $('#project').fSelect({
                 placeholder: 'Select options',
                 // numDisplayed: 0,
                 overflowText: '{n} selected',
                 searchText: 'Search options',
                 showSearch: true
             });
             $('#from_account').fSelect({
                 placeholder: 'Select options',
                 // numDisplayed: 0,
                 overflowText: '{n} selected',
                 searchText: 'Search options',
                 showSearch: true
             });
             $('#vendor_code').fSelect({
                 placeholder: 'Select options',
                 // numDisplayed: 0,
                 overflowText: '{n} selected',
                 searchText: 'Search options',
                 showSearch: true
             }); */
            $('#internal_external').select2();
            $('#template_type').select2();
            // $('#project').select2();
            $('#from_account').select2();
            $('#vendor_code').select2();
            projectsDropDown();
        });

        $(document).on("change", "input[type=checkbox]", function() {
            if ($(this).prop("checked")) {
                $('#shortcut_name').show();
                // alert("Check box is Checked");
            } else {
                $('#shortcut_name').hide();
                // alert("Check box is Unchecked");
            }
        });
        // $('.add-product').hide();

        /**
         * Projects dropdown list on load
         */
        function projectsDropDown() {
            $.ajaxSetup({
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                }
            });
            // Fetch options via AJAX
            $.ajax({
                url: "{{ route('backend.payments.searchProject') }}",
                type: 'POST',
                cache: true,
                dataType: 'json',
                success: function(response) {
                    // Clear existing options
                    $('#project').empty();
                    // Populate options dynamically
                    $('#project').append(`<option>Select Options</option>`);
                    $.each(response, function(index, item) {
                        $('#project').append(
                            `<option value="${item.project}">${item.project}</option>`);
                    });

                    // Reload fSelect to reflect changes
                    $('#project').fSelect('reload');
                },
                error: function(xhr, status, error) {
                    console.error('Error fetching options:', error);
                }
            });
        }

        /**
         * Payment dropdown list based on project selection
         */
        $(document).on('change', '#project', function() {
            let postData = {
                search: $(this).val()
            }
            paymentFromDropDown(postData);
        });

        function paymentFromDropDown(postData) {
            $.ajaxSetup({
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                }
            });
            // Fetch options via AJAX
            $.ajax({
                url: "{{ route('backend.payments.searchProject') }}",
                type: 'POST',
                data: postData,
                cache: true,
                dataType: 'json',
                success: function(response) {
                    // $('#from_account').val([]);
                    $('.from_account_dropdown').html('');
                    from_account_dropdown = ``;
                    from_account_dropdown =
                        `<select id="from_account" class="form-control from_account @error('from_account') is-invalid @enderror" name="from_account" data-index="0">`;
                    from_account_dropdown += `<option value="">--Select Account--</option>`;
                    $.each(response, function(index, item) {
                        console.log("project", item.project);
                        from_account_dropdown +=
                            `<option value="${item.benificiary_name}" data-account="${item.account_number}" data-s_no="${item.s_no}">${item.benificiary_name}</option>`
                    });
                    $('.from_account_dropdown').html(from_account_dropdown);
                    // $('#from_account'). val([]).change(); // Update selected options dynamically
                    $('#from_account').select2();
                    /* if ($('#from_account').next('.fs-wrap').length) {
                            $('#from_account').fSelect('destroy'); // Destroy existing instance
                        }
                        $('#from_account').fSelect({
                            placeholder: 'Select options',
                            // numDisplayed: 0,
                            overflowText: '{n} selected',
                            searchText: 'Search options',
                            showSearch: true
                        }); // Reinitialize */
                },
                error: function(xhr, status, error) {
                    console.error('Error fetching options:', error);
                }
            });
        }

        /**
         * Payment To dropdown list based from account selection
         */
        $(document).on('change', '#from_account', function() {
            var selectedAccount = $(this).find(':selected').data('account');
            var s_no = $(this).find(':selected').data('s_no');
            var project = $('#project').find(':selected').val();
            var internal_external = $('#internal_external').find(':selected').val();
            var fillable = {
                selectedAccount: selectedAccount
            }
            var postData = {
                s_no: s_no,
                project: project,
                internal_external: internal_external
            }
            paymentToDropDown(postData, fillable);
        });

        function paymentToDropDown(postData, fillable) {
            $.ajaxSetup({
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                }
            });
            // Fetch options via AJAX
            $.ajax({
                url: "{{ route('backend.payments.searchVendor') }}",
                type: 'POST',
                data: postData,
                cache: true,
                dataType: 'json',
                success: function(response) {
                    // Clear existing options
                    $('#from_account_no').val(fillable.selectedAccount);
                    $('.vendor_code_dropdown').html('');
                    // Populate options dynamically
                    // $('#vendor_code').append(`<option value="">--Select To--</option>`);
                    var vendorCodeHtml =
                        '<select id="vendor_code" class="form-control vendor_code @error('vendor_code') is-invalid @enderror" name="vendor_code" data-index="0"><option value="">--Select To--</option>'
                    $.each(response.data, function(index, item) {
                        vendorCodeHtml +=
                            `<option value="${item.vendor_name}" data-account="${item.account_number}" data-s_no="${item.s_no}" data-benificiary_name="${item.benificiary_name}" data-name_of_bank="${item.name_of_bank}" data-ifsc_code="${item.ifsc_code}" data-vendor_type="${item.vendor_type}">${item.vendor_name}</option>`;
                        // $('#vendor_code').append(
                        //     `<option value="${item.vendor_name}" data-account="${item.account_number}" data-s_no="${item.s_no}" data-benificiary_name="${item.benificiary_name}" data-name_of_bank="${item.name_of_bank}" data-vendor_type="${item.vendor_type}">${item.vendor_name}</option>`);
                    });
                    vendorCodeHtml += `</select>`;
                    $('.vendor_code_dropdown').html(vendorCodeHtml);
                    $('#vendor_code').select2();
                    // Reload fSelect to reflect changes
                    // $('#vendor_code').fSelect('reload');
                    // if ($('#vendor_code').next('.fs-wrap').length) {
                    //         $('#vendor_code').fSelect('destroy'); // Destroy existing instance
                    //     }
                    //     $('#vendor_code').fSelect(); // Reinitialize
                },
                error: function(xhr, status, error) {
                    console.error('Error fetching options:', error);
                }
            });
        }
        $(document).on('change', '#vendor_code', function() {
            var template_type = $('#template_type').val();
            var from_account = $('#from_account').val();
            // var account_name = $(this).find(':selected').val();
            var account_name = $(this).find(':selected').data('benificiary_name');
            var selectedAccount = $(this).find(':selected').data('account');
            var to_account_type = $(this).data('vendor_type');
            var name_of_bank = $(this).find(':selected').data('name_of_bank');
            var ifsc_code = $(this).find(':selected').data('ifsc_code');
            // var template_type = $('#template_type').find(':selected').val();
            // var from_account = $('#from_account').find(':selected').val();
            // var account_name = $(this).find(':selected').val();
            // var selectedAccount = $(this).find(':selected').data('account');
            // var to_account_type = $(this).find(':selected').data('vendor_type');
            // var name_of_bank = $(this).find(':selected').data('name_of_bank');
            // var s_no = $(this).find(':selected').data('s_no');
            // var project = $('#project').find(':selected').val();
            // var internal_external = $('#internal_external').find(':selected').val();
            setTimeout(() => {
                $('#vendor_account').val(selectedAccount);
                $('#benificiary_name').val(account_name);
                $('#vendor_name').val(account_name);
                $('#account_full_name').val(from_account);
                $('#from_account_type').val('Internal');
                $('#to_account_type').val(to_account_type)
                $('#name_of_bank').val(name_of_bank);
                $('#ifsc_code').val(ifsc_code);
                $('#template_type_hidden').val(template_type);
            }, 200);
        });

        /*  $(document).on('change', '.from_account', function() {
             $('#from_account_no').val($(this).find(':selected').data('ac'));
             $('#from_account_type').val($(this).find(':selected').data('from_account_type'));
             $('#account_full_name').val($(this).find(':selected').data('name'));
         }) */
        $(document).on('click', '.request-queue-clear', function() {
            requestQueueClear()
        })
        /* $(document).on('change', '.vendor_code', function() {
            let i = $(this).data('index');
            let name = $(this).find(':selected').data('name');
            let ac = $(this).find(':selected').data('ac');
            let vendor_nick_name = $(this).find(':selected').data('vendor_nick_name');
            let benificiary_name = $(this).find(':selected').data('benificiary');
            let to_account_type = $(this).find(':selected').data('to_account_type');
            let name_of_bank = $(this).find(':selected').data('name-of-bank');
            $('#vendor_name').val(benificiary_name);
            $('#vendor_account').val(ac);
            $('#vendor_nick_name').val(vendor_nick_name);
            $('#benificiary_name').val(benificiary_name);
            $('#to_account_type').val(to_account_type);
            $('#name_of_bank').val(name_of_bank);
        }) */

        function addRequestInQueue() {
            var actionUrl = "{{ route('backend.payments.addRequestInQueue') }}";
            var project = $('#project').find(':selected').val();
            var vendor_code = $('#vendor_code').find(':selected').val();
            // var formData = $('#requestFormCreate').serialize();
            var formData = $('#requestFormCreate').serializeArray();
            // Add a custom key-value pair
            formData.push({
                name: 'project',
                value: project
            });
            formData.push({
                name: 'vendor_code',
                value: vendor_code
            });
            $.ajax({
                url: actionUrl,
                type: 'POST',
                dataType: 'json',
                data: formData,
                // contentType: 'application/json',
                success: function(response) {
                    customAlert('Request added in queue', 'success');
                    $(".request-in-queue").html(response.html);
                    $(".btnRequestForm").addClass('show');
                    $(".btnRequestForm").removeClass('hide');
                },
                error: function(xhr, status, error) {
                    // $(".btnRequestForm").addClass('hide');
                    // $(".btnRequestForm").removeClass('show');
                    $(".btnRequestForm").addClass('show');
                    $(".btnRequestForm").removeClass('hide');
                    // console.log(error)
                    // iziToast.error({
                    //     message: 'An error occurred: ' + error,
                    //     position: 'topRight'
                    // });
                    // Log the error for debugging
                    console.error('XHR Object:', xhr);
                    console.error('Status:', status);
                    console.error('Error:', error);

                    // Extract error details
                    let errorMessage = 'An error occurred.';

                    if (xhr.status === 0) {
                        errorMessage = 'Network error: Unable to connect to the API.';
                    } else if (xhr.status >= 400 && xhr.status < 500) {
                        errorMessage = 'Client error: ' + (xhr.responseJSON?.message || xhr.statusText);
                    } else if (xhr.status >= 500) {
                        errorMessage = 'Server error: Please try again later.';
                    } else {
                        errorMessage = 'Client error: ' + (xhr.responseJSON?.message || xhr.statusText);
                    }

                    // Alert or display the error to the user
                    alert(errorMessage, 'error');
                }
                // response: JSON.stringify(person)
            });
        }

        function deleteRequestInQueue(indx) {
            
            var actionUrl = "{{ route('backend.payments.deleteRequestInQueue') }}";
            // var formData = $('#requestFormCreate').serialize();
            customConfirm('Are you sure you want to proceed?', function(result) {
                if(result){
                    
                
                
                $.ajax({
                    url: actionUrl,
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        index: indx,
                        _token: '{{ csrf_token() }}'
                    },
                    // contentType: 'application/json',
                    success: function(response) {
                        console.log(response)
                        $(".request-in-queue").html(response.html);
                    },
                    error: function(xhr, status, error) {
                        console.error('XHR Object:', xhr);
                        console.error('Status:', status);
                        console.error('Error:', error);

                        // Extract error details
                        let errorMessage = 'An error occurred.';

                        if (xhr.status === 0) {
                            errorMessage = 'Network error: Unable to connect to the API.';
                        } else if (xhr.status >= 400 && xhr.status < 500) {
                            errorMessage = 'Client error: ' + (xhr.responseJSON?.message || xhr
                                .statusText);
                        } else if (xhr.status >= 500) {
                            errorMessage = 'Server error: Please try again later.';
                        } else {
                            errorMessage = 'Client error: ' + (xhr.responseJSON?.message || xhr
                                .statusText);
                        }

                        // Alert or display the error to the user
                        alert(errorMessage, 'error');
                    }
                    // response: JSON.stringify(person)
                });
                }
            }, 'warning');
        }

        function requestQueueClear(index) {
            var actionUrl = "{{ route('backend.payments.deleteRequestInQueue') }}";
            // var formData = $('#requestFormCreate').serialize();
            customConfirm('Are you sure you want to proceed?', function(result) {
                $.ajax({
                    url: actionUrl,
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        clearCart: true,
                        _token: '{{ csrf_token() }}'
                    },
                    // contentType: 'application/json',
                    success: function(response) {
                        customAlert('Request queue empty, Add new request', 'success');
                        $(".request-in-queue").html(response.html);
                        $(".btnRequestForm").removeClass('show');
                        $(".btnRequestForm").addClass('hide');
                    },
                    error: function(xhr, status, error) {
                        customAlert('Unable to empty request queue');
                        $(".btnRequestForm").addClass('show');
                        $(".btnRequestForm").removeClass('hide');
                        console.error('XHR Object:', xhr);
                        console.error('Status:', status);
                        console.error('Error:', error);

                        // Extract error details
                        let errorMessage = 'An error occurred.';

                        if (xhr.status === 0) {
                            errorMessage = 'Network error: Unable to connect to the API.';
                        } else if (xhr.status >= 400 && xhr.status < 500) {
                            errorMessage = 'Client error: ' + (xhr.responseJSON?.message || xhr
                                .statusText);
                        } else if (xhr.status >= 500) {
                            errorMessage = 'Server error: Please try again later.';
                        } else {
                            errorMessage = 'Client error: ' + (xhr.responseJSON?.message || xhr
                                .statusText);
                        }

                        // Alert or display the error to the user
                        alert(errorMessage, 'error');
                    }
                    // response: JSON.stringify(person)
                });
            }, 'warning');
        }
        $(document).on('change', function() {
            if ($("#internal_external").val() == 'Internal') {
                // $('template_type').find('option:eq(1)').val());
            }
        })
        $(document).on("click", ".delete-item-row .delete-item", function() {
                deleteRequestInQueue($(this).data('index'))
                /* items
                    .find(".delete-item")
                    .eq($(this).index())
                    .remove(); */
            });
        $(function() {
            var templateType = $("#template_type");
            var internal_external = $("#internal_external");
            var project = $("#project");
            items = $(".request-in-queue");
            $(".add-product").on("click", function() {
                if (templateType.val() == '') {
                    customAlert('Please select template type');
                    return false
                } else if (project.val() == '') {
                    customAlert('Please select project');
                    return false
                } else if (internal_external.val() == '') {
                    customAlert('Please select Internal/External');
                    return false
                }
                addRequestInQueue();
            });
            
        });
        /*  $(document).on('change', '.template_type', function() {
             var actionUrl = "{{ route('backend.payments.getFromAccount', ':id') }}";
             actionUrl = actionUrl.replace(':id', $(this).val());
             if ($(this).val() == '') {
                 return false;
             }
             $.ajax({
                 url: actionUrl,
                 type: "GET",
                 data: {},
                 dataType: "JSON",
                 processData: false,
                 contentType: false,
                 success: function(response) {
                     console.log(response)
                     // if (response.errors) {
                     //     errorMsg = '';
                     //     $.each(response.errors, function(field, errors) {
                     //         $.each(errors, function(index, error) {
                     //             errorMsg += error + '<br>';
                     //         });
                     //     });
                     //     iziToast.error({
                     //         message: errorMsg,
                     //         position: 'topRight'
                     //     });
                     // } else {
                     //     iziToast.success({
                     //         message: response.success,
                     //         position: 'topRight'
                     //     });
                     // }
                     $('.from_account').html(response.html)
                 },
                 error: function(xhr, status, error) {
                     customAlert('An error occurred: ' + error);
                 }
             });
         }) */
    </script>
    <style>
        .tablecontainer {
            width: 100%;
            margin: 20px auto;
            border-radius: 10px;
            overflow: auto;
            /*box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);*/
            background-color: #fff;
        }

        .table-header {
            display: flex;
            align-items: center;
            padding: 10px;
            background-color: #f5f5f5;
            border-bottom: 1px solid #ddd;
        }

        .search-wrapper {
            flex: 1;
            display: flex;
            align-items: center;
        }

        .search-wrapper input {
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            margin-right: 10px;
        }

        #requestFormtable {
            width: 100%;
            border-collapse: collapse;
        }

        #requestFormtable th,
        #requestFormtable td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        #requestFormtable th {
            background-color: #f0f0f0;
            cursor: pointer;
            position: relative;
        }

        #requestFormtable th i {
            margin-left: 5px;
        }

        #requestFormtable td {
            max-width: 300px;
            /* Increased maximum width for better visibility of long addresses */
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        #requestFormtable td img {
            width: 50px;
            /* Square width */
            height: 50px;
            /* Square height */
            border-radius: 5px;
            /* Square corners */
            display: block;
            margin: 0 auto;
            /* Centering the image */
        }
    </style>
@endpush
